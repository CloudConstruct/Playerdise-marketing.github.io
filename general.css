a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;-webkit-box-sizing:border-box;box-sizing:border-box}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}body{position:relative;margin:0;padding:0;background-color:#2a343d;color:#f5f5f5;font-family:Roboto,sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box}div{-webkit-box-sizing:border-box;box-sizing:border-box}.sr-only{position:absolute;margin:-1px 0 0 -1px;padding:0;display:block;width:1px;height:1px;font-size:1px;line-height:1px;overflow:hidden;clip:rect(0,0,0,0);border:0;outline:0}.hero{position:relative;overflow:hidden;margin-bottom:32px}@media only screen and (min-width:768px){.hero{margin-bottom:3vw}}.hero__background{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;z-index:3;width:100%;height:100%;max-height:900px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__background-video{width:100%}.hero__trees{position:absolute;top:0;left:0;z-index:7;width:100%;height:100%;background-image:url(../../Images/trees.png);background-size:cover;background-position:bottom center}.section,.section--text-left,.section--text-right{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;width:100%;padding:16px;margin-bottom:32px}@media only screen and (min-width:768px){.section,.section--text-left,.section--text-right{padding:3vw;margin-bottom:6vw}}.section--text-right{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.section--text-left{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.section__text{position:relative;z-index:3;width:100%;padding:16px;background-color:rgba(69,91,102,.9)}@media only screen and (min-width:768px){.section__text{width:50%;padding:6vw}}.section__text h3{margin-bottom:16px;color:#a6dbf5;font-weight:700;text-align:center;font-size:24px;text-transform:none}@media only screen and (min-width:768px){.section__text h3{margin-bottom:3vw;font-size:2.5vw}}.section__text p{font-size:14px;line-height:1.7;text-transform:none;text-align:center}@media only screen and (min-width:768px){.section__text p{font-size:1.3vw}}.section__overlay{position:absolute;top:0;left:0;z-index:2;width:100%;height:100%;background-color:rgba(14,17,20,.5)}.background-2{background-image:url(../../Images/playerdise2.jpg);background-size:cover;background-position:center center}.header{position:absolute;top:32px;left:0;z-index:5;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:30px;background-color:#0e1114;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media only screen and (min-width:768px){.header{top:64px;height:70px}}.header__title{position:relative}.header__title-img{position:absolute;top:-23px;left:-50%;z-index:6;width:150px;-webkit-transform:translateX(-50%);transform:translateX(-50%)}@media only screen and (min-width:768px){.header__title-img{top:-14px;width:300px}}footer{padding:8px;background-color:#61808f;color:#0e1114;text-align:center}footer p{margin:0}.roboto-light{font-weight:300}.roboto-light-italic{font-weight:300;font-style:italic}.roboto-regular,h5{font-weight:400}.roboto-italic{font-weight:400;font-style:italic}.roboto-bold,h1{font-weight:700}.roboto-black,h1 span{font-weight:900}.roboto-cnd-regular,h2{font-family:'Roboto Condensed',sans-serif;font-weight:400}.roboto-cnd-bold{font-family:'Roboto Condensed',sans-serif;font-weight:700}@font-face{font-family:SSGizmo;src:url(../../Fonts/ss-gizmo.eot);src:url(../../Fonts/ss-gizmo.eot?#iefix) format("embedded-opentype"),url(../../Fonts/ss-gizmo.woff) format("woff"),url(../../Fonts/ss-gizmo.ttf) format("truetype"),url(../../Fonts/ss-gizmo.svg#SSGizmo) format("svg");font-weight:400;font-style:normal}.ss-gizmo{font-family:SSGizmo;font-style:normal;font-weight:400;text-decoration:none;text-rendering:optimizeLegibility;white-space:nowrap;-webkit-font-feature-settings:"liga";-ms-font-feature-settings:"liga" 1;-o-font-feature-settings:"liga";font-feature-settings:"liga";-webkit-font-smoothing:antialiased}p{margin-top:0}h1{margin:0;color:#f5f5f5;font-size:18px;line-height:20px}h1 span{display:inline-block;margin-top:5px;font-size:24px}@media only screen and (min-width:768px){h1{font-size:24px;line-height:26px}h1 span{font-size:35px}}@media only screen and (min-width:992px){h1{font-size:30px;line-height:32px}h1 span{font-size:48px}}h2{margin:0;color:#f5f5f5;font-size:28px;line-height:34px;text-transform:uppercase}@media only screen and (min-width:768px){h2{font-size:24px;line-height:30px}}@media only screen and (min-width:992px){h2{font-size:30px;line-height:36px}}@media only screen and (min-width:992px){h2{font-size:36px;line-height:44px}}h3{margin:0;color:#f5f5f5;font-size:16px;line-height:22px;text-transform:uppercase}@media only screen and (min-width:768px){h3{font-size:18px;line-height:24px}}@media only screen and (min-width:992px){h3{font-size:21px;line-height:27px}}h4{margin:30px 0 20px;color:#f5f5f5;font-size:18px;line-height:26px}@media only screen and (min-width:768px){h4{margin:32px 0 24px;font-size:18px;line-height:26px}}@media only screen and (min-width:992px){h4{margin:34px 0 30px;font-size:20px;line-height:26px}}h5{position:relative;z-index:1;margin:0 0 10px 0;font-size:16px;line-height:26px}@media only screen and (min-width:992px){h5{font-size:14px;line-height:21px}}p{margin:0 0 20px 0;font-size:14px;line-height:23px}@media only screen and (min-width:768px){p{font-size:16px;line-height:26px}}ol{padding:0 0 0 15px;margin:0 0 20px 0}ol li{margin:0 0 20px 0;font-size:14px;line-height:23px}@media only screen and (min-width:768px){ol{padding:0 0 0 20px;margin:0 0 30px 0}ol li{font-size:16px;line-height:26px}}ul{padding:0 0 0 20px;margin:0 0 20px 0}ul li{margin-bottom:10px;font-size:14px;line-height:23px}ul ul{padding:0 0 0 35px;margin:0}ul ol{padding:0 0 0 35px;margin:0}@media only screen and (min-width:768px){ul{margin:0 0 30px 0}ul li{font-size:16px;line-height:26px}}a{color:#f5f5f5;text-decoration:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
