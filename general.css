a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;-webkit-box-sizing:border-box;box-sizing:border-box}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}body{position:relative;margin:0;padding:0;background-color:#f5f5f5;color:#f5f5f5;font-family:Roboto,sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box}div{-webkit-box-sizing:border-box;box-sizing:border-box}.sr-only{position:absolute;margin:-1px 0 0 -1px;padding:0;display:block;width:1px;height:1px;font-size:1px;line-height:1px;overflow:hidden;clip:rect(0,0,0,0);border:0;outline:0}.hero{position:relative;overflow:hidden;margin-bottom:2vw;height:60vh}@media only screen and (min-width:768px){.hero{margin-bottom:1vw;height:auto}}.hero__background{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;z-index:3;width:100%;height:100%;max-height:900px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__background-video{height:100%}@media only screen and (min-width:768px){.hero__background-video{width:100%;height:auto}}.hero__trees{position:absolute;top:0;left:0;z-index:7;width:100%;height:100%;background-image:url(../../Images/trees.png);background-size:cover;background-position:bottom center}.hero__body{position:absolute;bottom:11vw;right:0;z-index:8;display:-webkit-box;display:-ms-flexbox;display:flex;width:95vw;height:auto;padding:4vw;background-color:rgba(42,52,61,.9);border-radius:2vw 0 0 2vw;-ms-flex-line-pack:end;align-content:flex-end;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-wrap:wrap;flex-wrap:wrap}@media only screen and (min-width:768px){.hero__body{bottom:7vw;width:75vw;padding:2vw}}.hero__body h2{color:#f5f5f5;font-weight:900;text-align:left;font-size:6.1vw;line-height:1;letter-spacing:-.1vw}@media only screen and (min-width:768px){.hero__body h2{font-size:5vw}}.hero__body p{margin-top:2vw;margin-bottom:0;color:#f5e61d;text-align:left;font-size:3.7vw;line-height:1.3}@media only screen and (min-width:768px){.hero__body p{font-size:1.7vw;line-height:1}}.section,.section--signup,.section--text-left,.section--text-right{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;overflow:hidden;width:100%;padding:15vw 4vw;margin-bottom:2vw}@media only screen and (min-width:768px){.section,.section--signup,.section--text-left,.section--text-right{padding:7vw 5vw;margin-bottom:1vw}}.section--signup:last-of-type,.section--text-left:last-of-type,.section--text-right:last-of-type,.section:last-of-type{margin-bottom:0}.section--text-right{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.section--text-left{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.section__text{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;z-index:5;width:100%;padding:5vw;background-color:rgba(69,91,102,.9);-webkit-box-shadow:0 8px 24px 0 rgba(0,0,0,.5);box-shadow:0 8px 24px 0 rgba(0,0,0,.5);-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media only screen and (min-width:768px){.section__text{width:60%;padding:3vw 3vw 6vw}}.section__text h3{margin-bottom:16px;color:#a6dbf5;font-weight:700;text-align:center;font-size:6vw;text-transform:none;line-height:1.1}@media only screen and (min-width:768px){.section__text h3{margin-bottom:3vw;margin-right:4vw;font-size:3vw;text-align:left}}.section__text h3.money{color:#90f51d}.section__text h3.props{color:#a6dbf5}.section__text h3.pennies{color:#f5e61d}.section__text p{margin:0;font-size:3.5vw;line-height:1.7;text-transform:none;text-align:center}@media only screen and (min-width:768px){.section__text p{font-size:1.3vw;text-align:left}}@media only screen and (min-width:768px){.section__text-body{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}}.section__overlay,.section__overlay--money,.section__overlay--pennies,.section__overlay--props{position:absolute;top:0;left:0;z-index:3;width:100%;height:100%;background-color:rgba(14,17,20,.6)}.section__overlay--money{z-index:2;background-color:rgba(144,245,29,.2)}.section__overlay--props{z-index:2;background-color:rgba(166,219,245,.2)}.section__overlay--pennies{z-index:2;background-color:rgba(245,230,29,.2)}.section__icon,.section__icon--money,.section__icon--pennies,.section__icon--props{display:inline-block;position:relative;width:8vw;height:8vw;padding:1vw;margin-bottom:3vw;border:.5vw solid #90f51d;border-radius:999px}.section__icon--money{border-color:#90f51d}.section__icon--props{border-color:#a6dbf5}.section__icon--pennies{border-color:#f5e61d}.section__back-text,.section__back-text--left{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;right:-2vw;bottom:-2vw;z-index:4;opacity:.4;height:25vw;width:65vw;color:#f5f5f5;font-size:12vw;font-weight:900;text-align:right;line-height:.8;letter-spacing:-.5vw;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.section__back-text--left{left:-2vw;right:auto;text-align:left;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.section--signup{padding:20vw 0;background-color:#455b66;text-align:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media only screen and (min-width:768px){.section--signup{padding:12vw 0}}.section--signup div{position:relative;z-index:5}.section--signup p{margin-bottom:4vw;font-size:4.5vw;font-weight:700}@media only screen and (min-width:768px){.section--signup p{margin-bottom:4vw;font-size:2.5vw}}.section--signup input{padding:3vw;width:80vw;border:none;border-radius:1vw;color:#455b66;font-size:4vw}@media only screen and (min-width:768px){.section--signup input{padding:1vw;max-width:none;width:40vw;border-radius:.5vw;font-size:2vw}}.background-1{background-image:url(../../Images/playerdise1.jpg);background-size:cover;background-position:center center}.background-2{background-image:url(../../Images/playerdise2.jpg);background-size:cover;background-position:center center}.background-3{background-image:url(../../Images/playerdise3.jpg);background-size:cover;background-position:center center}.icon-money{display:inline-block;background-size:100% auto;background-repeat:no-repeat;width:5vw;height:5vw;vertical-align:middle;background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' viewBox='0 0 24 24'%3E%3Cpath fill='%2390F51D' d='M5,6H23V18H5V6M14,9A3,3 0 0,1 17,12A3,3 0 0,1 14,15A3,3 0 0,1 11,12A3,3 0 0,1 14,9M9,8A2,2 0 0,1 7,10V14A2,2 0 0,1 9,16H19A2,2 0 0,1 21,14V10A2,2 0 0,1 19,8H9M1,10H3V20H19V22H1V10Z' /%3E%3C/svg%3E");position:absolute;top:47%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.icon-props{display:inline-block;background-size:100% auto;background-repeat:no-repeat;width:6vw;height:6vw;vertical-align:middle;background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' viewBox='0 0 24 24'%3E%3Cpath fill='%23A6DBF5' d='M11 6H14L17.29 2.7A1 1 0 0 1 18.71 2.7L21.29 5.29A1 1 0 0 1 21.29 6.7L19 9H11V11A1 1 0 0 1 10 12A1 1 0 0 1 9 11V8A2 2 0 0 1 11 6M5 11V15L2.71 17.29A1 1 0 0 0 2.71 18.7L5.29 21.29A1 1 0 0 0 6.71 21.29L11 17H15A1 1 0 0 0 16 16V15H17A1 1 0 0 0 18 14V13H19A1 1 0 0 0 20 12V11H13V12A2 2 0 0 1 11 14H9A2 2 0 0 1 7 12V9Z' /%3E%3C/svg%3E");position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.icon-pennies{display:inline-block;background-size:100% auto;background-repeat:no-repeat;width:6vw;height:6vw;vertical-align:middle;background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' viewBox='0 0 24 24'%3E%3Cpath fill='%23F5E61D' d='M12 2A10 10 0 1 0 22 12A10 10 0 0 0 12 2M15 10H11V11H14A1 1 0 0 1 15 12V15A1 1 0 0 1 14 16H13V17H11V16H9V14H13V13H10A1 1 0 0 1 9 12V9A1 1 0 0 1 10 8H11V7H13V8H15Z' /%3E%3C/svg%3E");position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.header{position:absolute;top:7vw;left:0;z-index:5;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:9vw;background-color:#0e1114;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media only screen and (min-width:768px){.header{top:64px;height:4vw}}.header__title{position:relative}.header__title-img{position:absolute;top:-4vw;left:-50%;z-index:6;width:47vw;-webkit-transform:translateX(-50%);transform:translateX(-50%)}@media only screen and (min-width:768px){.header__title-img{top:-1.8vw;width:24vw}}footer{padding:4vw;background-color:#0e1114;color:#f5f5f5;text-align:center}@media only screen and (min-width:768px){footer{padding:1.5vw}}footer p{margin:0;font-size:3vw;line-height:1}@media only screen and (min-width:768px){footer p{font-size:1vw}}.roboto-light{font-weight:300}.roboto-light-italic{font-weight:300;font-style:italic}.roboto-regular,h5{font-weight:400}.roboto-italic{font-weight:400;font-style:italic}.roboto-bold,h1{font-weight:700}.roboto-black,h1 span{font-weight:900}.roboto-cnd-regular,h2{font-family:'Roboto Condensed',sans-serif;font-weight:400}.roboto-cnd-bold{font-family:'Roboto Condensed',sans-serif;font-weight:700}@font-face{font-family:SSGizmo;src:url(../../Fonts/ss-gizmo.eot);src:url(../../Fonts/ss-gizmo.eot?#iefix) format("embedded-opentype"),url(../../Fonts/ss-gizmo.woff) format("woff"),url(../../Fonts/ss-gizmo.ttf) format("truetype"),url(../../Fonts/ss-gizmo.svg#SSGizmo) format("svg");font-weight:400;font-style:normal}.ss-gizmo{font-family:SSGizmo;font-style:normal;font-weight:400;text-decoration:none;text-rendering:optimizeLegibility;white-space:nowrap;-webkit-font-feature-settings:"liga";-ms-font-feature-settings:"liga" 1;-o-font-feature-settings:"liga";font-feature-settings:"liga";-webkit-font-smoothing:antialiased}p{margin-top:0}h1{margin:0;color:#f5f5f5;font-size:18px;line-height:20px}h1 span{display:inline-block;margin-top:5px;font-size:24px}@media only screen and (min-width:768px){h1{font-size:24px;line-height:26px}h1 span{font-size:35px}}@media only screen and (min-width:992px){h1{font-size:30px;line-height:32px}h1 span{font-size:48px}}h2{margin:0;color:#f5f5f5;font-size:28px;line-height:34px;text-transform:uppercase}@media only screen and (min-width:768px){h2{font-size:24px;line-height:30px}}@media only screen and (min-width:992px){h2{font-size:30px;line-height:36px}}@media only screen and (min-width:992px){h2{font-size:36px;line-height:44px}}h3{margin:0;color:#f5f5f5;font-size:16px;line-height:22px;text-transform:uppercase}@media only screen and (min-width:768px){h3{font-size:18px;line-height:24px}}@media only screen and (min-width:992px){h3{font-size:21px;line-height:27px}}h4{margin:30px 0 20px;color:#f5f5f5;font-size:18px;line-height:26px}@media only screen and (min-width:768px){h4{margin:32px 0 24px;font-size:18px;line-height:26px}}@media only screen and (min-width:992px){h4{margin:34px 0 30px;font-size:20px;line-height:26px}}h5{position:relative;z-index:1;margin:0 0 10px 0;font-size:16px;line-height:26px}@media only screen and (min-width:992px){h5{font-size:14px;line-height:21px}}p{margin:0 0 20px 0;font-size:14px;line-height:23px}@media only screen and (min-width:768px){p{font-size:16px;line-height:26px}}ol{padding:0 0 0 15px;margin:0 0 20px 0}ol li{margin:0 0 20px 0;font-size:14px;line-height:23px}@media only screen and (min-width:768px){ol{padding:0 0 0 20px;margin:0 0 30px 0}ol li{font-size:16px;line-height:26px}}ul{padding:0 0 0 20px;margin:0 0 20px 0}ul li{margin-bottom:10px;font-size:14px;line-height:23px}ul ul{padding:0 0 0 35px;margin:0}ul ol{padding:0 0 0 35px;margin:0}@media only screen and (min-width:768px){ul{margin:0 0 30px 0}ul li{font-size:16px;line-height:26px}}a{color:#f5f5f5;text-decoration:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
